@{
    var vm_types = new List<SelectListItem>();
    vm_types.Add(new SelectListItem {Value="Windows", Text="Windows"});
    vm_types.Add(new SelectListItem {Value="Unix", Text="Unix"});

   // var machine_sizes = new List<SelectListItem>();
    //machine_sizes.Add(new SelectListItem {Value="Small", Text="Small"});
    //machine_sizes.Add(new SelectListItem {Value="Medium", Text="Medium"});
    //machine_sizes.Add(new SelectListItem {Value="Large", Text="Large"});
    //achine_sizes.Add(new SelectListItem {Value="Extra Large", Text="Extra Large"});

    List<SelectListItem> imageList = (List<SelectListItem>)TempData["OS"];
    List<SelectListItem> sizeList = (List<SelectListItem>)TempData["Size"];
}
@model ijpie.Web.Models.QuickCreateModel
<ul id="basic-QC-actions">
    <li><a href="#" id="open-QC-form">Quick Create</a></li>
</ul>
<table id="QC-list"></table>
<div id="QC-VM-capture">
    <div id="QC-VM-capture-header">
        <ul id="QC-VM-capture-tabs">
            <li id="QCVM-capture">Capture/Clone this Machine</li>
        </ul>
        <ul id="QC-VM-capture-actions">
            <li id="QC-VM-capture-close" class="glyphicon glyphicon-remove"></li>
        </ul>
    </div>
    @using (Ajax.BeginForm(
        "CaptureQCVM",
        "Dashboard",
        new { },
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "Dashboard.CaptureQCVMSuccess"
        },
        new { id = "QC-VM-capture-form" }
    ))
    {
        @Html.AntiForgeryToken()
        <div id="QC-VM-capture-form-body">
            <span class="glyphicon glyphicon-info-sign" style="color: yellow; font-size: 1.5em"></span>
            The cloned machine would be available as template for new <em>Quick Create</em> machines.
            <input type="hidden" name="id" id="QCVM_capture_id" />
        </div>
        <div id="QC-VM-capture-form-footer">
            <input type="submit" value="Capture" class="btn btn-default" />
            <input type="button" value="Cancel" class="btn btn-default" id="QC-VM-capture-cancel"/>
        </div>
    }
</div>
<div id="QC-VM-delete">
    <div id="QC-VM-delete-header">
        <ul id="QC-VM-delete-tabs">
            <li id="QCVM-delete">Delete Machine</li>
        </ul>
        <ul id="QC-VM-delete-actions">
            <li id="QC-VM-delete-close" class="glyphicon glyphicon-remove"></li>
        </ul>
    </div>
    @using (Ajax.BeginForm(
            "DeleteQCVM",
            "Dashboard",
            new { },
            new AjaxOptions
            {
                HttpMethod = "POST",
                OnSuccess = "Dashboard.deleteQCVMSuccess"
            },
            new { id = "QC-VM-delete-form" }
            ))
    {
        @Html.AntiForgeryToken()
        <div id="QC-VM-delete-form-body">
            <span class="glyphicon glyphicon-warning-sign" style="color: red; font-size: 1.5em"></span>
            The Machine and its related resources (files on its file system, new programs installed etc.) will be deleted permanently. You can not undo this action. Do you wish to proceed?
            <input type="hidden" name="id" id="delete_QCVM_id" />
        </div>
        <div id="QC-VM-delete-form-footer">
            <input type="submit" value="Delete" class="btn btn-default" id="Del-QCVM-deletion"/>
            <input type="button" value="Cancel" class="btn btn-default" id="cancel-QCVM-deletion" />
        </div>
    }
</div>
<div id="QC-form-content">
    <div id="QC-form-content-header">
        <ul id="QC-form-content-tabs">
            <li class="active-lab-form-tab"></li>
        </ul>
        <ul id="QC-form-content-actions">
            <li id="QC-form-content-close" class="glyphicon glyphicon-remove"></li>
        </ul>
    </div>
        @using (Ajax.BeginForm(
        "QuickCreate",
        "Dashboard",
        new { },
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "App.UpdateVMStatus",
        },
        new { id = "qc-create-form" }
    ))
        {
            @Html.AntiForgeryToken()
            <div id="QC-form-body" class="col">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.OS, new { @class = "control-label col-md-3" })
                    <div class="col-md-9" id="q-image-list" data-count=" 1">
                        @Html.DropDownListFor(model => model.OS, imageList, "Select Image")
                        @Html.ValidationMessageFor(model => model.OS)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Machine_Size, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @*@Html.DropDownListFor(model => model.Machine_Size, sizeList, "Select Size")*@
                        @Html.DropDownListFor(model => model.Machine_Size, sizeList, "Select Size")
                        @Html.ValidationMessageFor(model => model.Machine_Size)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Name, new { type = "text", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.RecepientEmail, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.RecepientEmail, new { type = "text", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.RecepientEmail)
                    </div>
                </div>
            </div>
            <div id="QC-form-footer">
                <input type="submit" value="Create" id="q-create-lab-btn" class="btn btn-default" />
                <input type="reset" value="Reset" id="q-reset-lab-btn" class="btn btn-default" />
            </div>
        }
</div>
<div id="QC-actions-template" style="display: none;">
    <ul class="QC-actions">
        <li data-role="QC_act" class="glyphicon glyphicon-trash reschedule-lab"></li>
        <li data-role="QC_Capt" class="glyphicon glyphicon-hdd reschedule-lab"></li>
    </ul>
</div>